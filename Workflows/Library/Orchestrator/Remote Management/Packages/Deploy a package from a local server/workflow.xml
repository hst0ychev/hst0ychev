<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item0" object-name="Workflow:name=generic" id="AB8080808080808080808080808080808680808001297796784030ce882292c2a" version="1.1.6" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Deploy a package from a local server]]></display-name>
  <description><![CDATA[Deploys a package from a local Orchestrator server to remote Orchestrator servers.]]></description>
  <position y="20.0" x="180.0"/>
  <input>
    <param name="pkg" type="Package">
      <description><![CDATA[Package to deploy]]></description>
    </param>
    <param name="servers" type="Array/VCO:RemoteServer">
      <description><![CDATA[Target servers]]></description>
    </param>
    <param name="override" type="boolean">
      <description><![CDATA[Overwrite ]]></description>
    </param>
  </input>
  <output>
    <param name="errors" type="Array/string"/>
  </output>
  <workflow-item name="item0" out-name="item1" type="task">
    <display-name><![CDATA[Deploy a package ]]></display-name>
    <script encoded="false"><![CDATA[var impStatusList = null;
var errors = new Array()

if (pkg == "notfound"){
	msg = "Package can not be found."
	logError(msg)
} else {
		
	System.log(	"==== Deploying [" + pkg.name + "] ==== ")
	try {
		impStatusList = VCODeploymentManager.deployPackage(pkg, servers, override)
	} catch (e) {
		logError(e.message)
	}
	
	for( var i in impStatusList)
	{   
		var impStatus = impStatusList[i]
	
		System.log(	"==== " + impStatus.getTargetName() + " ==== " + impStatus.getStatusAsString() )
	
		var messages = impStatus.getMessages()
		for (var j in messages)
		{
			log(messages[j])
		}	
	}
}
	
function logError(msg){
	errors.push(msg)
	System.error(msg)
}

function log(msg){
	if ( msg.severity == "ERROR" ){
		logError(msg.message)
	} else 	if ( msg.severity == "WARNING" ){
		System.warn(msg.message)
	} else {
		System.log(msg.message)
	}
}

]]></script>
    <in-binding>
      <bind name="pkg" type="Package" export-name="pkg"/>
      <bind name="servers" type="Array/VCO:RemoteServer" export-name="servers"/>
      <bind name="override" type="boolean" export-name="override"/>
    </in-binding>
    <out-binding>
      <bind name="errors" type="Array/string" export-name="errors"/>
    </out-binding>
    <position y="120.0" x="140.0"/>
  </workflow-item>
  <workflow-item name="item1" type="end" end-mode="0">
    <position y="190.0" x="180.0"/>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Deploy a package from a local server]]></title>
      <p-group>
        <title><![CDATA[Package details]]></title>
        <desc><![CDATA[Select a package to deploy and the servers to deploy the package to. 
Select whether the content of the package on the remote server is replaced, discarding version of the packaged elements.
]]></desc>
        <p-param name="pkg">
          <desc><![CDATA[Package
]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        </p-param>
        <p-param name="servers">
          <desc><![CDATA[Remote vCO servers]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="ognlValidator" type="String"><![CDATA[#servers!=null && #servers.length>0]]></p-qual>
        </p-param>
        <p-param name="override">
          <desc><![CDATA[Overwrite]]></desc>
          <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[__NULL__]]></p-qual>
        </p-param>
      </p-group>
    </p-step>
  </presentation>
</workflow>