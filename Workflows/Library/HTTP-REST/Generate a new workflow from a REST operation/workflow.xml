<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="Workflow:name=generic" id="B9808080808080808080808080808080D980808001299080088268176866967b3" version="1.0.1" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Generate a new workflow from a REST operation]]></display-name>
  <description><![CDATA[Generates a new workflow from a REST operation.]]></description>
  <ref-types><![CDATA[(REST:RESTOperation)]]></ref-types>
  <position y="50.0" x="160.0"/>
  <input>
    <param name="operation" type="REST:RESTOperation">
      <description><![CDATA[Operation to use for generation]]></description>
    </param>
    <param name="workflowName" type="string">
      <description><![CDATA[Name of the new workflow]]></description>
    </param>
    <param name="category" type="WorkflowCategory">
      <description><![CDATA[Category for the new workflow]]></description>
    </param>
    <param name="namespace" type="string">
      <description><![CDATA[Namespace for input XML element]]></description>
    </param>
    <param name="element" type="string">
      <description><![CDATA[Name of the input XML element]]></description>
    </param>
    <param name="use_xsd" type="boolean">
      <description><![CDATA[Use XSD for input]]></description>
    </param>
    <param name="defaultContentType" type="string">
      <description><![CDATA[Input content type]]></description>
    </param>
  </input>
  <output>
    <param name="generatedWorkflow" type="Workflow">
      <description><![CDATA[The new generated workflow]]></description>
    </param>
  </output>
  <attrib name="errorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="170.0" x="160.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" catch-name="item2" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Generate workflow]]></display-name>
    <script encoded="false"><![CDATA[generatedWorkflow = use_xsd ? RESTHostManager.createWorkflowWithXsdInput(operation, workflowName, category, namespace, element, defaultContentType)
                            : RESTHostManager.createWorkflow(operation, workflowName, category, defaultContentType);
]]></script>
    <in-binding>
      <bind name="operation" type="REST:RESTOperation" export-name="operation"/>
      <bind name="workflowName" type="string" export-name="workflowName"/>
      <bind name="category" type="WorkflowCategory" export-name="category"/>
      <bind name="use_xsd" type="boolean" export-name="use_xsd"/>
      <bind name="namespace" type="string" export-name="namespace"/>
      <bind name="element" type="string" export-name="element"/>
      <bind name="defaultContentType" type="string" export-name="defaultContentType"/>
    </in-binding>
    <out-binding>
      <bind name="generatedWorkflow" type="Workflow" export-name="generatedWorkflow"/>
    </out-binding>
    <position y="120.0" x="120.0"/>
  </workflow-item>
  <workflow-item name="item2" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="110.0" x="260.0"/>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Generate a new workflow from a REST operation]]></title>
      <p-group>
        <title><![CDATA[Operation]]></title>
        <desc><![CDATA[Specify an operation to generate a workflow from. If the operation takes input and XSD schemas are added to its host, you can optionally specify the request input type.]]></desc>
        <p-param name="operation">
          <desc><![CDATA[Operation]]></desc>
          <p-qual name="contextualParameter" type="void"><![CDATA[]]></p-qual>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        </p-param>
        <p-param name="defaultContentType">
          <desc><![CDATA[Content type]]></desc>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[#operation.defaultContentType]]></p-qual>
          <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#operation.method == "POST" || #operation.method == "PUT"]]></p-qual>
        </p-param>
        <p-param name="use_xsd">
          <desc><![CDATA[Use the available XSD schemas to define operation input]]></desc>
          <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","shouldDisplaySchemaSelection").call( #operation )]]></p-qual>
          <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[__NULL__]]></p-qual>
        </p-param>
      </p-group>
      <p-group>
        <title><![CDATA[Workflow input]]></title>
        <desc><![CDATA[Specify the XML input type.]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[ #use_xsd && GetAction("com.vmware.library.http-rest.configuration","shouldDisplaySchemaSelection").call( #operation )]]></p-qual>
        <p-param name="namespace">
          <desc><![CDATA[Select XML Namespace]]></desc>
          <p-qual kind="ognl" name="genericEnumeration" type="Array/string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","findNamespacesForHost").call( #operation )]]></p-qual>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        </p-param>
        <p-param name="element">
          <desc><![CDATA[Select XML Element]]></desc>
          <p-qual kind="ognl" name="linkedEnumeration" type="Array/string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","findElementsInNamespace").call( #operation , #namespace )]]></p-qual>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        </p-param>
      </p-group>
      <p-group>
        <title><![CDATA[Workflow properties]]></title>
        <desc><![CDATA[Specify workflow name and category to save to.]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#operation != null]]></p-qual>
        <p-param name="workflowName">
          <desc><![CDATA[Name]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="defaultValue" type="string"><![CDATA[("Invoke '"+#operation.displayName+"'").replaceAll("[\\\\/]", "_")]]></p-qual>
          <p-qual kind="static" name="regexp" type="Regexp"><![CDATA[[^\/\\]+]]></p-qual>
        </p-param>
        <p-param name="category">
          <desc><![CDATA[Folder]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        </p-param>
      </p-group>
    </p-step>
  </presentation>
</workflow>