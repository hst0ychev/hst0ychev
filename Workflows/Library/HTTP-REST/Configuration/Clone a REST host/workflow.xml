<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item5" object-name="Workflow:name=generic" id="C2808080808080808080808080808080A2808080012995053491651398b094fa1" version="1.0.4" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Clone a REST host]]></display-name>
  <description><![CDATA[Creates a clone of a REST host.]]></description>
  <ref-types><![CDATA[>(REST:RESTHost)]]></ref-types>
  <position y="10.0" x="160.0"/>
  <input>
    <param name="host" type="REST:RESTHost">
      <description><![CDATA[REST host to clone]]></description>
    </param>
    <param name="name" type="string">
      <description><![CDATA[New host's name]]></description>
    </param>
    <param name="url" type="string">
      <description><![CDATA[New host's base URL]]></description>
    </param>
    <param name="authentication" type="string">
      <description><![CDATA[New host's authentication type]]></description>
    </param>
    <param name="authUserName" type="string">
      <description><![CDATA[Authentication user name]]></description>
    </param>
    <param name="authPassword" type="SecureString">
      <description><![CDATA[Authentication password]]></description>
    </param>
    <param name="consumerKey" type="string">
      <description><![CDATA[Consumer key]]></description>
    </param>
    <param name="consumerSecret" type="SecureString">
      <description><![CDATA[Consumer secret]]></description>
    </param>
    <param name="accessToken" type="string">
      <description><![CDATA[Access token]]></description>
    </param>
    <param name="accessTokenSecret" type="SecureString">
      <description><![CDATA[Access token secret]]></description>
    </param>
    <param name="connectionTimeout" type="number">
      <description><![CDATA[Connection timeout]]></description>
    </param>
    <param name="operationTimeout" type="number">
      <description><![CDATA[Operation timeout]]></description>
    </param>
    <param name="sessionMode" type="string">
      <description><![CDATA[Session mode]]></description>
    </param>
    <param name="oauth2Token" type="string">
      <description><![CDATA[OAuth 2.0 token]]></description>
    </param>
    <param name="workstation" type="string">
      <description><![CDATA[Workstation for NTLM authentication]]></description>
    </param>
    <param name="domain" type="string">
      <description><![CDATA[Domain for NTLM authentication]]></description>
    </param>
    <param name="useProxy" type="boolean">
      <description><![CDATA[User proxy]]></description>
    </param>
    <param name="proxyHost" type="string">
      <description><![CDATA[Proxy host]]></description>
    </param>
    <param name="proxyPort" type="number">
      <description><![CDATA[Proxy port]]></description>
    </param>
  </input>
  <output>
    <param name="newHost" type="REST:RESTHost">
      <description><![CDATA[Cloned rest hosts]]></description>
    </param>
  </output>
  <attrib name="errorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="ignoreWarnings" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[If set to true, the certificate is accepted silently and the certificate is added to the trusted store]]></description>
  </attrib>
  <workflow-item name="item0" out-name="item1" catch-name="item2" throw-bind-name="errorCode" type="task">
    <display-name><![CDATA[Clone host]]></display-name>
    <script encoded="false"><![CDATA[newHost = host.newHostFromThis();
newHost.name = name;
newHost.url = url;
newHost.connectionTimeout = connectionTimeout;
newHost.operationTimeout = operationTimeout;
if (useProxy) {
	newHost.proxyHost = proxyHost;
	newHost.proxyPort = proxyPort;
} else {
	newHost.proxyHost = null;
	newHost.proxyPort = -1;
}
if ( authentication == "OAuth 1.0" ) {
	var authParams = [consumerKey, consumerSecret, accessToken, accessTokenSecret];
} else if ( authentication == "OAuth 2.0" ) {
	var authParams = [oauth2Token];
} else if ( authentication == "NTLM" ) {
	var authParams = [sessionMode, authUserName, authPassword, workstation, domain];
} else {
	var authParams = [sessionMode, authUserName, authPassword];
}
var authenticationObject = RESTAuthenticationManager.createAuthentication(authentication, authParams);
System.log("REST host authentication: " + authenticationObject);
newHost.authentication = authenticationObject;
System.log("Saving newHost: " + newHost);
newHost = RESTHostManager.addHost(newHost);]]></script>
    <in-binding>
      <bind name="accessToken" type="string" export-name="accessToken"/>
      <bind name="authentication" type="string" export-name="authentication"/>
      <bind name="authPassword" type="SecureString" export-name="authPassword"/>
      <bind name="authUserName" type="string" export-name="authUserName"/>
      <bind name="connectionTimeout" type="number" export-name="connectionTimeout"/>
      <bind name="consumerKey" type="string" export-name="consumerKey"/>
      <bind name="consumerSecret" type="SecureString" export-name="consumerSecret"/>
      <bind name="host" type="REST:RESTHost" export-name="host"/>
      <bind name="name" type="string" export-name="name"/>
      <bind name="operationTimeout" type="number" export-name="operationTimeout"/>
      <bind name="url" type="string" export-name="url"/>
      <bind name="sessionMode" type="string" export-name="sessionMode"/>
      <bind name="oauth2Token" type="string" export-name="oauth2Token"/>
      <bind name="accessTokenSecret" type="SecureString" export-name="accessTokenSecret"/>
      <bind name="workstation" type="string" export-name="workstation"/>
      <bind name="domain" type="string" export-name="domain"/>
      <bind name="proxyHost" type="string" export-name="proxyHost"/>
      <bind name="proxyPort" type="number" export-name="proxyPort"/>
      <bind name="useProxy" type="boolean" export-name="useProxy"/>
    </in-binding>
    <out-binding>
      <bind name="newHost" type="REST:RESTHost" export-name="newHost"/>
      <bind name="errorCode" type="string" export-name="errorCode"/>
    </out-binding>
    <position y="209.95454545454544" x="265.0"/>
  </workflow-item>
  <workflow-item name="item1" type="end" end-mode="0">
    <position y="263.59090909090907" x="305.0"/>
  </workflow-item>
  <workflow-item name="item2" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="199.95454545454544" x="445.0"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item4" type="custom-condition" alt-out-name="item0">
    <display-name><![CDATA[Custom decision]]></display-name>
    <script encoded="false"><![CDATA[return (/^https:/).test(url);]]></script>
    <in-binding>
      <bind name="url" type="string" export-name="url"/>
    </in-binding>
    <position y="63.59090909090908" x="125.0"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item0" catch-name="item8" throw-bind-name="errorCode" type="link" linked-workflow-id="b006447c-c041-4d51-8726-9f30b9709284">
    <display-name><![CDATA[Import a certificate from URL using proxy server]]></display-name>
    <in-binding>
      <bind name="url" type="string" export-name="url">
        <description><![CDATA[URL or just host:port for non-HTTPS SSL services:]]></description>
      </bind>
      <bind name="ignoreWarnings" type="boolean" export-name="ignoreWarnings">
        <description><![CDATA[If set to true, the certificate is accepted silently and the certificate is added to the trusted store]]></description>
      </bind>
      <bind name="proxyHost" type="string" export-name="proxyHost">
        <description><![CDATA[Proxy host]]></description>
      </bind>
      <bind name="proxyPort" type="number" export-name="proxyPort">
        <description><![CDATA[Proxy port]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Imports an SSL certificate into the server trust store.]]></description>
    <position y="82.68181818181817" x="264.5"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item3" type="condition" alt-out-name="item7" comparator="0">
    <display-name><![CDATA[Decision]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (useProxy == true) ;]]></script>
    <in-binding>
      <bind name="useProxy" type="boolean" export-name="useProxy"/>
    </in-binding>
    <condition name="useProxy" type="boolean" comparator="0" label="null">false</condition>
    <position y="18.136363636363633" x="424.5"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item0" catch-name="item6" throw-bind-name="errorCode" type="link" linked-workflow-id="c5a874a2-e8e7-480d-bdde-d1a80b8a3011">
    <display-name><![CDATA[Import a certificate from URL]]></display-name>
    <in-binding>
      <bind name="url" type="string" export-name="url">
        <description><![CDATA[URL or just host:port for non-HTTPS SSL services:]]></description>
      </bind>
      <bind name="ignoreWarnings" type="boolean" export-name="ignoreWarnings">
        <description><![CDATA[If set to true, the certificate is accepted silently and the certificate is added to the trusted store]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Imports an SSL certificate into the server trust store.]]></description>
    <position y="91.77272727272727" x="504.5"/>
  </workflow-item>
  <workflow-item name="item6" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="81.77272727272727" x="684.5"/>
  </workflow-item>
  <workflow-item name="item8" throw-bind-name="errorCode" type="end" end-mode="1">
    <position y="72.68181818181817" x="444.5"/>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Clone a REST host]]></title>
      <p-param name="host">
        <desc><![CDATA[Host to be cloned]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual name="contextualParameter" type="void"><![CDATA[]]></p-qual>
      </p-param>
      <p-group>
        <title><![CDATA[Host Properties]]></title>
        <desc><![CDATA[Properties of the cloned host. The name is the host's unique identifier.]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#host != null]]></p-qual>
        <p-param name="name">
          <desc><![CDATA[New name]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA["Copy of '" + #host.name + "'"]]></p-qual>
        </p-param>
        <p-param name="url">
          <desc><![CDATA[URL]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[#host.url]]></p-qual>
        </p-param>
        <p-param name="connectionTimeout">
          <desc><![CDATA[Connection timeout (seconds)]]></desc>
          <p-qual kind="static" name="minNumberValue" type="Number"><![CDATA[0]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="number"><![CDATA[#host.connectionTimeout]]></p-qual>
        </p-param>
        <p-param name="operationTimeout">
          <desc><![CDATA[Operation timeout (seconds)]]></desc>
          <p-qual kind="static" name="minNumberValue" type="Number"><![CDATA[0]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="number"><![CDATA[#host.operationTimeout]]></p-qual>
        </p-param>
      </p-group>
      <p-group>
        <title><![CDATA[Proxy settings]]></title>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#host != null]]></p-qual>
        <p-param name="useProxy">
          <desc><![CDATA[Use proxy]]></desc>
          <p-qual kind="ognl" name="dataBinding" type="boolean"><![CDATA[#proxyHost != null]]></p-qual>
        </p-param>
        <p-param name="proxyHost">
          <desc><![CDATA[Proxy host]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#useProxy]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[(#host != null ? #host.proxyHost : "")]]></p-qual>
        </p-param>
        <p-param name="proxyPort">
          <desc><![CDATA[Proxy port]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#useProxy]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="number"><![CDATA[(#host != null ? #host.proxyPort : "")]]></p-qual>
        </p-param>
      </p-group>
    </p-step>
    <p-step>
      <title><![CDATA[Host Authentication]]></title>
      <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#host != null]]></p-qual>
      <p-param name="authentication">
        <desc><![CDATA[Authentication type]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationType").call( #host )]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#NONE#;#string#OAuth 1.0#;#string#OAuth 2.0#;#string#Basic#;#string#Digest#;#string#NTLM#}#]]></p-qual>
      </p-param>
      <p-group>
        <title><![CDATA[User credentials]]></title>
        <desc><![CDATA[If Shared Session is selected, the provided credentials are used.  If Per User Session option is used, the credentials are retrieved from the currently logged-in user.]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#authentication!="NONE"&&#authentication!="OAuth 1.0"&&#authentication!="OAuth 2.0"]]></p-qual>
        <p-param name="sessionMode">
          <desc><![CDATA[Session mode]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#Shared Session#;#string#Per User Session#}#]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 0.0, #authentication,  (#authentication=="Basic" || #authentication=="Digest" || #authentication=="NTLM") )]]></p-qual>
        </p-param>
        <p-param name="authUserName">
          <desc><![CDATA[Authentication user name]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 1.0, #authentication, ((#authentication=="Basic" || #authentication=="Digest" || #authentication=="NTLM")  && #sessionMode=="Shared Session") )]]></p-qual>
          <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#sessionMode=="Shared Session"]]></p-qual>
        </p-param>
        <p-param name="authPassword">
          <desc><![CDATA[Authentication password]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="SecureString"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 2.0, #authentication, ((#authentication=="Basic" || #authentication=="Digest" || #authentication=="NTLM")  && #sessionMode=="Shared Session") )]]></p-qual>
          <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#sessionMode=="Shared Session"]]></p-qual>
        </p-param>
      </p-group>
      <p-group>
        <title><![CDATA[OAuth 1.0]]></title>
        <desc><![CDATA[OAuth authentication properties. For details, see https://oauth.net/]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#authentication=="OAuth 1.0"]]></p-qual>
        <p-param name="consumerKey">
          <desc><![CDATA[Consumer key]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 0.0, #authentication, (#authentication=="OAuth 1.0") )]]></p-qual>
        </p-param>
        <p-param name="consumerSecret">
          <desc><![CDATA[Consumer secret]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="SecureString"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 1.0, #authentication, (#authentication=="OAuth 1.0") )]]></p-qual>
        </p-param>
        <p-param name="accessToken">
          <desc><![CDATA[Access token]]></desc>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 2.0, #authentication, (#authentication=="OAuth 1.0") )]]></p-qual>
        </p-param>
        <p-param name="accessTokenSecret">
          <desc><![CDATA[Access token secret]]></desc>
          <p-qual kind="ognl" name="dataBinding" type="SecureString"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 3.0, #authentication, (#authentication=="OAuth 1.0") )]]></p-qual>
        </p-param>
      </p-group>
      <p-group>
        <title><![CDATA[OAuth 2.0]]></title>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#authentication=="OAuth 2.0"]]></p-qual>
        <p-param name="oauth2Token">
          <desc><![CDATA[Token]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 0.0, #authentication, (#authentication=="OAuth 2.0"))]]></p-qual>
        </p-param>
      </p-group>
      <p-group>
        <title><![CDATA[NTLM]]></title>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#authentication=="NTLM"]]></p-qual>
        <p-param name="workstation">
          <desc><![CDATA[Workstation for NTLM authentication]]></desc>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 3.0, #authentication, (#authentication=="NTLM") )]]></p-qual>
        </p-param>
        <p-param name="domain">
          <desc><![CDATA[Domain for NTLM authentication]]></desc>
          <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.library.http-rest.configuration","getRESTHostAuthenticationProperty").call( #host , 4.0, #authentication, (#authentication=="NTLM") )]]></p-qual>
        </p-param>
      </p-group>
    </p-step>
  </presentation>
</workflow>