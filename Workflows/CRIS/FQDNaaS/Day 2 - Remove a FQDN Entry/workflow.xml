<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="172e6e6d-21af-4a95-9402-cb992e8bb28b" version="0.0.0" api-version="6.0.0" allowed-operations="vfe" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Day 2 - Remove a FQDN Entry]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="payload" type="Properties"/>
  </input>
  <attrib name="machine_name" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="524.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[function displayVar(variable){
  if(!variable){
    return "Not defined";
  }
  return variable;
}

function getProperty(field,from_var){
  if(from_var && from_var.get(field))
  {
    return from_var.get(field);
  }
  return false;
}

function getPropertyFromJSONObject(field,from_var){
  if(from_var && typeof from_var[field] !== 'undefined')
  {
    return from_var.get(field);
  }
  return false;
}


//Request id(STRING)
var request_id = getProperty("requestId",payload);

//Machine(Infrastructure.EBS.MachineDetail)
var machine = getProperty("machine",payload);

//Virtual Machine Event(STRING)
var virtual_machine_event = getProperty("virtualMachineEvent",payload);

//Lifecycle state(Infrastructure.EBS.LifecycleStateInfo.Provision)
var lifecycle_object = getProperty("lifecycleState",payload);

//Lifecycle State phase(STRING)
var lifecycle_phase = getProperty("phase",lifecycle_object);

//Lifecycle state name(STRING)
var lifecycle_state = getProperty("state",lifecycle_object);

//properties - Properties(Array Of Infrastructure.Machine.Properties)
var machine_properties = getProperty("properties",machine);

//virtualMachineAddOrUpdateProperties - Properties of the virtual machine to be added or updated(Array Of Infrastructure.CustomProperty)
var virtual_machine_add_or_update_properties = getProperty("virtualMachineAddOrUpdateProperties",payload);

//virtualMachineDeleteProperties - Properties of the virtual machine to be deleted(Array Of Infrastructure.CustomProperty)
var virtual_machine_delete_properties = getProperty("virtualMachineDeleteProperties",payload);

//id - Machine id(STRING)
var machine_id = getProperty("id",machine);

//name - Machine name(STRING)
var machine_name = getProperty("name",machine);

System.log("Machine name: "+displayVar(machine_name));]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload"/>
      <bind name="machine_name" type="string" export-name="machine_name"/>
    </in-binding>
    <out-binding>
      <bind name="machine_name" type="string" export-name="machine_name"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="link" linked-workflow-id="8dabf2f6-2678-4e3d-b8e0-201a95fd7d15">
    <display-name><![CDATA[Remove FQDN Entry]]></display-name>
    <in-binding>
      <bind name="usersEmailId" type="string" explicitly-not-bound="true" export-name="NULL">
        <description><![CDATA[The requesting User's Email Address.]]></description>
      </bind>
      <bind name="vm_name" type="string" export-name="machine_name">
        <description><![CDATA[FQDN to be removed]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <presentation>
    <p-param name="payload">
      <desc><![CDATA[payload]]></desc>
    </p-param>
  </presentation>
</workflow>