<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="getlunNumberandSCSCI" result-type="Any" api-version="6.0.0" id="8168b435-4352-4bd1-a9d4-1a9a9188d658" version="0.0.10" allowed-operations="evf" category-name="com.vmware.indcoe.vcenter">
  <script encoded="false"><![CDATA[var detachObj = {
	getLun : function(vmName,vmdkPath){
		vmName = vmName.replace(" ","")
		var vCACVms = Server.findAllForType("vCAC:VirtualMachine", "VirtualMachineName eq '"+vmName+"'");
		var sdkConnections = VcPlugin.allSdkConnections;  
		var vcenterName;        
		var psHost;      
		for(var j in sdkConnections){
			System.debug("VM id "+vCACVms[0].vmUniqueID)
			try{
		    	vcVirtualMachine = sdkConnections[j].searchIndex.findByUuid(null,vCACVms[0].vmUniqueID,true,true);
				if(vcVirtualMachine){
					vcenterName = sdkConnections[j].id
					System.debug("SDK id "+sdkConnections[j].id)
				}
			}catch(e){System.debug("Unable to find vc vm by uuid in sdkConnection "+sdkConnections[j]);}
		}
		//get category
		var category = Server.getConfigurationElementCategoryWithPath("Helper");
		//die in a fire if non-existent
		if (category == null) {
		    throw "Configuration element category not found or empty!";
		}
		//get _all_ the elements
		var elements = category.configurationElements;
		//retrieve names
		for (i = 0; i < elements.length; i++) {
		    if (elements[i].name == "vCenterCreds") {
				//found required element
				var split_val = vcenterName.split('.')
				var attrib='';
				for(var hh in split_val){ attrib = attrib+split_val[hh]}
				vcenterCompVar = elements[i].getAttributeWithKey(attrib).value;
				psHost = elements[i].getAttributeWithKey("psHost").value
				//System.debug(psHost)
				break
			}
		}
		var username = vcenterCompVar.get("username")
		var password = vcenterCompVar.get("password")
		var powerObj = System.getModule("com.vmware.indoce.library.executepowershell").ExecutePowershell()
		var script = ""
		script += "$b = Set-PowerCLIConfiguration -Scope User -ParticipateInCEIP $false -Confirm:$false\n"
		script += "Import-Module Vmware.VimAutomation.Core\n"
		script += "$VM = '"+vmName+"'\n"
		script += "$a = Connect-VIServer -Server '"+vcenterName+"' -User '"+username+"' -Password '"+password+"'\n"
		script += "$Disks = Get-VM $VM | Get-HardDisk -DiskType 'RawPhysical','RawVirtual'\n"
		script += "Foreach ($Disk in $Disks) {\n"
		script += "$Lun = Get-SCSILun $Disk.SCSICanonicalName -VMHost (Get-VM $VM).VMHost\n"
		script += "$lunnum = $Lun.RuntimeName.Substring($Lun.RuntimeName.LastIndexof('L')+1)\n"
		script += "Write-Host 'lunnum = '$lunnum\n"
		script += "$canonicalnum = $lun.CanonicalName\n"
		script += "Write-Host 'canonicalnum = '$canonicalnum"
		script += "}"
		System.log("script "+script)
		var response = powerObj.executeScript(psHost,script)
		System.debug("Response "+response)
		var sp_val = response.split("\n");
		var response_val = new Array();
		for(var jj in sp_val){
			if(sp_val[jj].indexOf("lunnum")!=-1){
			response_val.push(sp_val[jj].split("=")[1])
		//response_val.push(sp_val[jj].split("\n"))
			}
			if(sp_val[jj].indexOf("canonicalnum")!=-1){
			response_val.push(sp_val[jj].split("=")[1])
		//response_val.push(sp_val[jj].split("\n"))
			}
			}
		//return sp_val
		//var response_val = new Array();
		return response_val
	}
}
return detachObj]]></script>
</dunes-script-module>