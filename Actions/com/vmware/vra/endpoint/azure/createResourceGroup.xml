<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="createResourceGroup" result-type="Azure:ResourceGroup" api-version="6.0.0" id="a576b9b5-dde1-4f96-9d38-65d974cbd57b" version="7.6.0" allowed-operations="vf" category-name="com.vmware.vra.endpoint.azure">
  <param n="connection" t="Azure:Connection"><![CDATA[Azure connection]]></param>
  <param n="location" t="Azure:Region"><![CDATA[Resource group location]]></param>
  <param n="groupName" t="string"><![CDATA[Resource group name]]></param>
  <param n="apiVersion" t="string"><![CDATA[Azure API version to use]]></param>
  <script encoded="false"><![CDATA[var REFERENCE_COUNT_TAG_KEY = "xaas.allocation.reference.count";

var lockId = groupName + "@" + connection.name;

// Locking
LockingSystem.lockAndWait(lockId, workflow.id);
log("Locked for '" + lockId + "'");

try {
    var resourceGroup = AzureResourceGroupManager.getResourceGroupByConnectionAndName(connection, groupName);

    if (resourceGroup == null) {
        // Create
        log("Creating new resource group with name: '" + groupName + "' in connection: '" + connection.displayName + "'");
        var resourceGroup = AzureResourceGroupManager.create(location, groupName);

        AzureResourceGroupManager.addTag(resourceGroup, REFERENCE_COUNT_TAG_KEY, "0");

        log("Resource group created successfully.");
    } else {
        // The resourceGroup exists, so don't do anything.
        log("Found Resource group with name: '" + groupName + "' in connection: '" + connection.displayName + "'.");
    }
} finally {
    // Unlocking
    LockingSystem.unlock(lockId, workflow.id);
    log("Unlocked for '" + lockId + "'");
}
return AzureResourceGroupManager.getResourceGroupByConnectionAndName(connection,groupName);

function log(message) {
    System.log("[createResourceGroup] " + message);
}]]></script>
</dunes-script-module>